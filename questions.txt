*ANDELABS -  DAY 1 (MONDAY)*

*Question 1:*
Compare and return results, based on the argument supplied to the function. Follow through the test to produce the perfect function that accounts for all expectations.
* For strings, return its length.
* For null or undefined return string 'no value'
* For booleans return the boolean
* For numbers return a string showing how it compares to hundred e.g. For 67 return 'less than 100' for 4034 return 'more than 100' or equal to 100 as the case may be
* For arrays return the 3rd index, or undefined if it doesn't exist.
* For functions call the function and pass in true as an argument and return it.


*Question 2:*

Write a getPrimes function that takes an integer value n as argument and generates prime numbers from 0 to n with asymptotic analysis. The generated prime numbers should be in an array. Your logic should be as efficient as possible (with minimal iterations).
```Write your own tests (10 test cases)```


*ANDELABS -  DAY 2 (TUESDAY)*

*Question 1:*

Write a words function that takes in a string argument and returns a JSON object showing how many instances of each word occur in the input.
For example for the input "olly olly in come free”, it should return
olly: 2
in: 1
come: 1
free: 1

*Question 2:*

You are to write a function, reverseString(string), that returns the reverse of the string provided. If the reverse of the string is the same as the original string, as in the case of palindromes, return true instead.

ANDELABS -  DAY 3 (WEDNESDAY) 
*Question 1:*
Firstly you are to create three functions, as prototypes to the Array class to return the following:
toTwenty() returns [1, 2, 3 . . . 20]
toForty() returns [2, 4, 6 . . . 40]
toOneThousand() returns [10, 20, 30 . . . 1000]
Once you are done, create another prototype(d) function called search, it will take just one argument which is the number you are to find. The search function should return an object, which contains
1. .count, the number of times you function iterated to find the index of the number in question
2. .index, the index of the number in question
3. .length, the length of the original array
The .search function should implement the binary search algorithm, each time you iterate, you should increase the count, to test how efficient your implementation is.

*Question 2:*
You are presented with two arrays, all containing positive integers. Create a function findMissing(arr1, arr2) that takes in two arguments, both of which are arrays. One of the arrays will have one extra number, see below
* [1,2,3] and [1,2,3,4] should return 4
* [4,66,7] and [66,77,7,4] should return 77



*OOP EXERCISE*

*Car Class Lab*

You are to create a Car class that can be used to instantiate various vehicles.
It takes in arguments that depict the type, model, and name of the vehicle, provided they are set.
Let the test guide you to building your Car boiler-plate.